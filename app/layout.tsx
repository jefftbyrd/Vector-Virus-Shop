import './globals.scss';
import localFont from 'next/font/local';
// import Image from 'next/image';
import Link from 'next/link';
import { ReactNode } from 'react';
import { getCookie } from '../util/cookies';
import { parseJson } from '../util/json';
import Footer from './footer';

const groteskGras = localFont({
  src: './fonts/Grotesk-04Gras.woff',
  variable: '--font-grotesk-gras',
  weight: '900',
});
const groteskMince = localFont({
  src: './fonts/Grotesk-02Mince.woff',
  variable: '--font-grotesk-mince',
  weight: '100',
});
const groteskRegular = localFont({
  src: './fonts/Grotesk-03Regular.woff',
  variable: '--font-grotesk-regular',
  weight: '400',
});
const ddin = localFont({
  src: './fonts/D-DIN.woff',
  variable: '--font-ddin',
  weight: '300',
});
const ddinBold = localFont({
  src: './fonts/D-DIN-Bold.woff',
  variable: '--font-ddin-bold',
  weight: '300',
});

export const metadata = {
  title: {
    default: 'Home | Vector',
    template: '%s | Vector',
  },

  description: 'Generated by create next app',
};

type Props = {
  children: ReactNode;
};

export default async function RootLayout({ children }: Props) {
  const cartCookie = await getCookie('cart');
  const cartItems: [] = parseJson(cartCookie) || [];

  const totalCartItems: number = cartItems.reduce(
    (acc: number, item: { quantity: number }) => {
      return (acc += item.quantity);
    },
    0,
  );

  return (
    <html lang="en">
      <body
        className={`${groteskGras.variable} ${groteskMince.variable} ${groteskRegular.variable} ${ddin.variable} ${ddinBold.variable}`}
      >
        <div className="container">
          <header className="header">
            <Link href="/">
              <h2>Vector</h2>
            </Link>
            <nav>
              <div>
                <Link href="/viruses">Viruses</Link>
              </div>
              <Link href="/about">About</Link>
              <Link href="/cart" data-test-id="cart-link">
                Cart:{' '}
                <span data-test-id="cart-count">
                  {`[${totalCartItems ? totalCartItems : 'empty'}]`}
                </span>
              </Link>
              <Link href="/checkout">Checkout</Link>
              <Link href="/new-arrivals">New Arrivals</Link>
            </nav>
          </header>
          <main className="content">{children}</main>
          <footer className="footer">
            <Footer />
          </footer>
        </div>
      </body>
    </html>
  );
}
